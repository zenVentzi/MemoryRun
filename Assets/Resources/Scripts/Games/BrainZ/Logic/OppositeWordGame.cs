using System.Collections.Generic;
using Assets.Resources.Scripts.General;
using Assets.Resources.Scripts.UI.Buttons;
using UnityEngine;
using UnityEngine.UI;

namespace Assets.Resources.Scripts.Games.BrainZ.Logic
{
    public class OppositeWordGame : BrainGame
    {
        #region variables

        #region words

        private static readonly KeyValuePair<string, bool>[] Words =
        {
            new KeyValuePair<string, bool>("small-big", true),
            new KeyValuePair<string, bool>("tall-short", true),
            new KeyValuePair<string, bool>("fat-thin", true),
            new KeyValuePair<string, bool>("black-white", true),
            new KeyValuePair<string, bool>("good-bad", true),
            new KeyValuePair<string, bool>("happy-sad", true),
            new KeyValuePair<string, bool>("beautiful-ugly", true),
            new KeyValuePair<string, bool>("poor-rich", true),
            new KeyValuePair<string, bool>("boiled-raw", true),
            new KeyValuePair<string, bool>("soft-hard", true),
            new KeyValuePair<string, bool>("healty-unhealty", true),
            new KeyValuePair<string, bool>("wealthy-poor", true),
            new KeyValuePair<string, bool>("brave-cowardly", true),
            new KeyValuePair<string, bool>("smart-silly", true),
            new KeyValuePair<string, bool>("up-down", true),
            new KeyValuePair<string, bool>("right-left", true),
            new KeyValuePair<string, bool>("hardworking-lazy", true),
            new KeyValuePair<string, bool>("dry-wet", true),
            new KeyValuePair<string, bool>("wide-tight", true),
            new KeyValuePair<string, bool>("dry-wet", true),
            new KeyValuePair<string, bool>("clean-dirty", true),
            new KeyValuePair<string, bool>("run-stay", true),
            new KeyValuePair<string, bool>("stay-work", true),
            new KeyValuePair<string, bool>("row-column", true),
            new KeyValuePair<string, bool>("start-end", true),
            new KeyValuePair<string, bool>("support-opposition", true),
            new KeyValuePair<string, bool>("accept-refuse", true),
            new KeyValuePair<string, bool>("active-lazy", true),
            new KeyValuePair<string, bool>("adult-child", true),
            new KeyValuePair<string, bool>("after-before", true),
            new KeyValuePair<string, bool>("heavy-light", true),
            new KeyValuePair<string, bool>("in-out", true),
            new KeyValuePair<string, bool>("inside-outside", true),
            new KeyValuePair<string, bool>("wide-narrow", true),
            new KeyValuePair<string, bool>("many-few", true),
            new KeyValuePair<string, bool>("safe-dangerous", true),
            new KeyValuePair<string, bool>("alive-dead", true),
            new KeyValuePair<string, bool>("all-none", true),
            new KeyValuePair<string, bool>("ancient-modern", true),
            new KeyValuePair<string, bool>("always-never", true),
            new KeyValuePair<string, bool>("professional-amateur", true),
            new KeyValuePair<string, bool>("devil-angel", true),
            new KeyValuePair<string, bool>("ask-answer", true),
            new KeyValuePair<string, bool>("antonym-synonym", true),
            new KeyValuePair<string, bool>("apart-together", true),
            new KeyValuePair<string, bool>("agree-disagree", true),
            new KeyValuePair<string, bool>("asleep-awake", true),
            new KeyValuePair<string, bool>("nice-awful", true),
            new KeyValuePair<string, bool>("best-worst", true),
            new KeyValuePair<string, bool>("birth-death", true),
            new KeyValuePair<string, bool>("bitter-sweet", true),
            new KeyValuePair<string, bool>("bottom-top", true),
            new KeyValuePair<string, bool>("boy-girl", true),
            new KeyValuePair<string, bool>("buy-sell", true),
            new KeyValuePair<string, bool>("brave-afraid", true),
            new KeyValuePair<string, bool>("calm-excited", true),
            new KeyValuePair<string, bool>("catch-miss", true),
            new KeyValuePair<string, bool>("ceiling-floor", true),
            new KeyValuePair<string, bool>("cheap-expensive", true),
            new KeyValuePair<string, bool>("comedy-drama", true),
            new KeyValuePair<string, bool>("cold-hot", true),
            new KeyValuePair<string, bool>("cloudy-sunny", true),
            new KeyValuePair<string, bool>("close-open", true),
            new KeyValuePair<string, bool>("false-correct", true),
            new KeyValuePair<string, bool>("wrong-correct", true),
            new KeyValuePair<string, bool>("courage-fear", true),
            new KeyValuePair<string, bool>("create-destroy", true),
            new KeyValuePair<string, bool>("divorce-marriage", true),
            new KeyValuePair<string, bool>("domestic-foreign", true),
            new KeyValuePair<string, bool>("dull-interesting", true),
            new KeyValuePair<string, bool>("early-late", true),
            new KeyValuePair<string, bool>("friend-enemy", true),
            new KeyValuePair<string, bool>("export-import", true),
            new KeyValuePair<string, bool>("exit-entrance", true),
            new KeyValuePair<string, bool>("everybody-nobody", true),
            new KeyValuePair<string, bool>("exciting-boring", true),
            new KeyValuePair<string, bool>("extreme-moderate", true),
            new KeyValuePair<string, bool>("fail-succeed", true),
            new KeyValuePair<string, bool>("fail-pass", true),
            new KeyValuePair<string, bool>("fix-break", true),
            new KeyValuePair<string, bool>("forget-remember", true),
            new KeyValuePair<string, bool>("future-past", true),
            new KeyValuePair<string, bool>("full-empty", true),
            new KeyValuePair<string, bool>("front-rear", true),
            new KeyValuePair<string, bool>("young-old", true),
            new KeyValuePair<string, bool>("old-fresh", true),
            new KeyValuePair<string, bool>("freeze-melt", true),
            new KeyValuePair<string, bool>("flat-hilly", true),
            new KeyValuePair<string, bool>("add-subtract", true),
            new KeyValuePair<string, bool>("deny-admit", true),
            new KeyValuePair<string, bool>("elementary-advanced", true),
            new KeyValuePair<string, bool>("wide-tight", true),
            new KeyValuePair<string, bool>("clean-dirty", true),
            new KeyValuePair<string, bool>("big-large", false),
            new KeyValuePair<string, bool>("little-small", false),
            new KeyValuePair<string, bool>("funny-comical", false),
            new KeyValuePair<string, bool>("wide-large", false),
            new KeyValuePair<string, bool>("poor-needy", false),
            new KeyValuePair<string, bool>("shining-bright", false),
            new KeyValuePair<string, bool>("luxury-fancy", false),
            new KeyValuePair<string, bool>("fancy-deluxe", false),
            new KeyValuePair<string, bool>("good looking-handsome", false),
            new KeyValuePair<string, bool>("usually-generally", false),
            new KeyValuePair<string, bool>("try-attempt", false),
            new KeyValuePair<string, bool>("uncommon-unusual", false),
            new KeyValuePair<string, bool>("under-below", false),
            new KeyValuePair<string, bool>("transform-convert", false),
            new KeyValuePair<string, bool>("tiny-small", false),
            new KeyValuePair<string, bool>("temper-mood", false),
            new KeyValuePair<string, bool>("vary-differ", false),
            new KeyValuePair<string, bool>("huge-vast", false),
            new KeyValuePair<string, bool>("talk-speak", false),
            new KeyValuePair<string, bool>("certain-sure", false),
            new KeyValuePair<string, bool>("steady-firm", false),
            new KeyValuePair<string, bool>("look-see", false),
            new KeyValuePair<string, bool>("afraid-scared", false),
            new KeyValuePair<string, bool>("unhappy-sad", false),
            new KeyValuePair<string, bool>("safe-secure", false),
            new KeyValuePair<string, bool>("impolite-rude", false),
            new KeyValuePair<string, bool>("stone-rock", false),
            new KeyValuePair<string, bool>("ill-sick", false),
            new KeyValuePair<string, bool>("hint-tip", false),
            new KeyValuePair<string, bool>("hard-difficult", false),
            new KeyValuePair<string, bool>("impact-affect", false),
            new KeyValuePair<string, bool>("hall-corridor", false),
            new KeyValuePair<string, bool>("good-fine", false),
            new KeyValuePair<string, bool>("trash-garbage", false),
            new KeyValuePair<string, bool>("fun-entertaining", false),
            new KeyValuePair<string, bool>("fast-quick", false),
            new KeyValuePair<string, bool>("great-fantastic", false),
            new KeyValuePair<string, bool>("bad-evil", false),
            new KeyValuePair<string, bool>("busy-active", false),
            new KeyValuePair<string, bool>("close-shut", false),
            new KeyValuePair<string, bool>("rich-wealthy", false),
            new KeyValuePair<string, bool>("renew-resume", false),
            new KeyValuePair<string, bool>("comment-remark", false),
            new KeyValuePair<string, bool>("get-receive", false),
            new KeyValuePair<string, bool>("lift-raise", false),
            new KeyValuePair<string, bool>("relax-rest", false),
            new KeyValuePair<string, bool>("respond-reply", false),
            new KeyValuePair<string, bool>("part-section", false),
            new KeyValuePair<string, bool>("odd-strange", false),
            new KeyValuePair<string, bool>("mature-old", false),
            new KeyValuePair<string, bool>("decoration-ornament", false),
            new KeyValuePair<string, bool>("miss-overlook", false),
            new KeyValuePair<string, bool>("perfect-flawless", false),
            new KeyValuePair<string, bool>("new-recent", false),
            new KeyValuePair<string, bool>("pleasant-nice", false),
            new KeyValuePair<string, bool>("midday-noon", false),
            new KeyValuePair<string, bool>("inform-notify", false),
            new KeyValuePair<string, bool>("gentle-mild ", false),
            new KeyValuePair<string, bool>("make-build", false),
            new KeyValuePair<string, bool>("crazy-mad", false),
            new KeyValuePair<string, bool>("lucid-clear", false),
            new KeyValuePair<string, bool>("perhaps-maybe", false),
            new KeyValuePair<string, bool>("native-local", false),
            new KeyValuePair<string, bool>("near-close", false),
            new KeyValuePair<string, bool>("fond-loving", false),
            new KeyValuePair<string, bool>("many-lots", false),
            new KeyValuePair<string, bool>("child-kid", false),
            new KeyValuePair<string, bool>("learn-memorize", false),
            new KeyValuePair<string, bool>("hear-listen", false),
            new KeyValuePair<string, bool>("delight-joy", false),
            new KeyValuePair<string, bool>("job-work", false),
            new KeyValuePair<string, bool>("smart-intelligent", false),
            new KeyValuePair<string, bool>("bill-invoice", false),
            new KeyValuePair<string, bool>("mean-intend", false),
            new KeyValuePair<string, bool>("mental-intellectual", false),
            new KeyValuePair<string, bool>("right-correct", false),
            new KeyValuePair<string, bool>("sweets-candy", false),
            new KeyValuePair<string, bool>("total-complete", false),
            new KeyValuePair<string, bool>("choosy-picky", false),
            new KeyValuePair<string, bool>("dedicated-committed", false),
            new KeyValuePair<string, bool>("elevate-raise", false),
            new KeyValuePair<string, bool>("enormous-huge", false),
            new KeyValuePair<string, bool>("exactly-precisely", false),
            new KeyValuePair<string, bool>("in-out", true),
            new KeyValuePair<string, bool>("above-below", true),
            new KeyValuePair<string, bool>("absence-presence", true),
            new KeyValuePair<string, bool>("lack-abundance", true),
            new KeyValuePair<string, bool>("intentional-accidental", true),
            new KeyValuePair<string, bool>("affirmative-negative", true),
            new KeyValuePair<string, bool>("ancestor-descendant", true),
            new KeyValuePair<string, bool>("bore-amuse", true),
            new KeyValuePair<string, bool>("free-arrest", true),
            new KeyValuePair<string, bool>("approximately-exactly", true),
            new KeyValuePair<string, bool>("defend-attack", true),
            new KeyValuePair<string, bool>("blunt-sharp", true),
            new KeyValuePair<string, bool>("soul-body", true),
            new KeyValuePair<string, bool>("brother-sister", true),
            new KeyValuePair<string, bool>("lend-borrow", true),
            new KeyValuePair<string, bool>("certainly-probably", true),
            new KeyValuePair<string, bool>("changeable-constant", true),
            new KeyValuePair<string, bool>("bright-cloudy", true),
            new KeyValuePair<string, bool>("come-go", true),
            new KeyValuePair<string, bool>("simple-complicated", true),
            new KeyValuePair<string, bool>("insult-compliment", true),
            new KeyValuePair<string, bool>("voluntary-compulsory", true),
            new KeyValuePair<string, bool>("separate-connect", true),
            new KeyValuePair<string, bool>("consonant-vowel", true),
            new KeyValuePair<string, bool>("interrupt-continue", true),
            new KeyValuePair<string, bool>("cruel-humane", true),
            new KeyValuePair<string, bool>("whisper-cry", true),
            new KeyValuePair<string, bool>("damage-repair", true),
            new KeyValuePair<string, bool>("dawn-duck", true),
            new KeyValuePair<string, bool>("victory-defeat", true),
            new KeyValuePair<string, bool>("dictatorship-republic", true),
            new KeyValuePair<string, bool>("arrive-depart", true),
            new KeyValuePair<string, bool>("departure-arrival", true),
            new KeyValuePair<string, bool>("desperate-hopeful", true),
            new KeyValuePair<string, bool>("equal-different", true),
            new KeyValuePair<string, bool>("unity-division", true),
            new KeyValuePair<string, bool>("emigrate-immigrate", true),
            new KeyValuePair<string, bool>("immigration-emigration", true),
            new KeyValuePair<string, bool>("even-odd", true),
            new KeyValuePair<string, bool>("everything-nothing", true),
            new KeyValuePair<string, bool>("occasionally-frequently", true),
            new KeyValuePair<string, bool>("guest-host", true),
            new KeyValuePair<string, bool>("hate-love", true),
            new KeyValuePair<string, bool>("enjoy-hate", true),
            new KeyValuePair<string, bool>("hell-heaven", true),
            new KeyValuePair<string, bool>("high-deep", true),
            new KeyValuePair<string, bool>("hit-miss", true),
            new KeyValuePair<string, bool>("husband-wife", true),
            new KeyValuePair<string, bool>("ignore-notice", true),
            new KeyValuePair<string, bool>("reduce-increase", true),
            new KeyValuePair<string, bool>("kind-cruel", true),
            new KeyValuePair<string, bool>("junior-senior", true),
            new KeyValuePair<string, bool>("lady-gentleman", true),
            new KeyValuePair<string, bool>("land-water", true),
            new KeyValuePair<string, bool>("let-forbid", true),
            new KeyValuePair<string, bool>("lovely-terrible", true),
            new KeyValuePair<string, bool>("major-minor", true),
            new KeyValuePair<string, bool>("mess-order", true),
            new KeyValuePair<string, bool>("servant-master", true),
            new KeyValuePair<string, bool>("monarchy-republic", true),
            new KeyValuePair<string, bool>("niece-nephew", true),
            new KeyValuePair<string, bool>("ordinary-special", true),
            new KeyValuePair<string, bool>("parents-children", true),
            new KeyValuePair<string, bool>("plant-harvest", true),
            new KeyValuePair<string, bool>("pupil-teacher", true),
            new KeyValuePair<string, bool>("receive-send", true),
            new KeyValuePair<string, bool>("regret-satisfaction", true),
            new KeyValuePair<string, bool>("salt-sugar", true),
            new KeyValuePair<string, bool>("security-danger", true),
            new KeyValuePair<string, bool>("waste-save", true),
            new KeyValuePair<string, bool>("sit-stand", true),
            new KeyValuePair<string, bool>("south-north", true),
            new KeyValuePair<string, bool>("trust-suspect", true),
            new KeyValuePair<string, bool>("give-take", true),
            new KeyValuePair<string, bool>("here-there", true),
            new KeyValuePair<string, bool>("hungry-thirsty", true),
            new KeyValuePair<string, bool>("partial-total", true),
            new KeyValuePair<string, bool>("work-rest", true),
            new KeyValuePair<string, bool>("worse-better", true),
            new KeyValuePair<string, bool>("best-worst", true),
            new KeyValuePair<string, bool>("animated-lively", false),
            new KeyValuePair<string, bool>("admit-confess", false),
            new KeyValuePair<string, bool>("accomplish-achieve", false),
            new KeyValuePair<string, bool>("manage-administer", false),
            new KeyValuePair<string, bool>("nearly-almost", false),
            new KeyValuePair<string, bool>("annoy-bother", false),
            new KeyValuePair<string, bool>("reply-answer", false),
            new KeyValuePair<string, bool>("anyway-besides", false),
            new KeyValuePair<string, bool>("obvious-anyway", false),
            new KeyValuePair<string, bool>("appear-seem", false),
            new KeyValuePair<string, bool>("relevant-applicable", false),
            new KeyValuePair<string, bool>("ardour-passion", false),
            new KeyValuePair<string, bool>("reach-arrive", false),
            new KeyValuePair<string, bool>("crafty-artful", false),
            new KeyValuePair<string, bool>("organization-association", false),
            new KeyValuePair<string, bool>("absent-away", false),
            new KeyValuePair<string, bool>("terrible-awful", false),
            new KeyValuePair<string, bool>("spine-backbone", false),
            new KeyValuePair<string, bool>("behind-backside", false),
            new KeyValuePair<string, bool>("bad-poor", false),
            new KeyValuePair<string, bool>("ballot-poll", false),
            new KeyValuePair<string, bool>("bear-affect", false),
            new KeyValuePair<string, bool>("beat-defeat", false),
            new KeyValuePair<string, bool>("becoming-fitting", false),
            new KeyValuePair<string, bool>("act-behave", false),
            new KeyValuePair<string, bool>("plausible-believable", false),
            new KeyValuePair<string, bool>("belly-stomach", false),
            new KeyValuePair<string, bool>("bid-tender", false),
            new KeyValuePair<string, bool>("beneficent-generous", false),
            new KeyValuePair<string, bool>("beneficial-favourable", false),
            new KeyValuePair<string, bool>("cold-bloodless", false),
            new KeyValuePair<string, bool>("bizarre-weird", false),
            new KeyValuePair<string, bool>("blameless-innocent", false),
            new KeyValuePair<string, bool>("brave-courageous", false),
            new KeyValuePair<string, bool>("branch-department", false),
            new KeyValuePair<string, bool>("forehead-brow", false),
            new KeyValuePair<string, bool>("trade-business", false),
            new KeyValuePair<string, bool>("engaged-busy", false),
            new KeyValuePair<string, bool>("categorize-classify", false),
            new KeyValuePair<string, bool>("charter-constitution", false),
            new KeyValuePair<string, bool>("corny-cheesy", false),
            new KeyValuePair<string, bool>("mainly-chiefly", false),
            new KeyValuePair<string, bool>("cut-chop", false),
            new KeyValuePair<string, bool>("class-lesson", false),
            new KeyValuePair<string, bool>("clerk-receptionist", false),
            new KeyValuePair<string, bool>("hairstyle-coiffure", false),
            new KeyValuePair<string, bool>("gather-collect", false),
            new KeyValuePair<string, bool>("comfort-consolation", false),
            new KeyValuePair<string, bool>("graduation-commencement", false),
            new KeyValuePair<string, bool>("total-complete", false),
            new KeyValuePair<string, bool>("harmony-concord", false),
            new KeyValuePair<string, bool>("associate-connect", false),
            new KeyValuePair<string, bool>("fixed-constant", false),
            new KeyValuePair<string, bool>("modern-contemporary", false),
            new KeyValuePair<string, bool>("opposite-contrary", false),
            new KeyValuePair<string, bool>("convey-communicate", false),
            new KeyValuePair<string, bool>("dice-cube", false),
            new KeyValuePair<string, bool>("curler-roller", false),
            new KeyValuePair<string, bool>("dash-sprint", false),
            new KeyValuePair<string, bool>("dawn-daybreak", false),
            new KeyValuePair<string, bool>("fragile-delicate", false),
            new KeyValuePair<string, bool>("denim-jeans", false),
            new KeyValuePair<string, bool>("devil-satan", false),
            new KeyValuePair<string, bool>("decrease-diminish", false),
            new KeyValuePair<string, bool>("vanish-disappear", false),
            new KeyValuePair<string, bool>("eager-keen", false),
            new KeyValuePair<string, bool>("soil-earth", false),
            new KeyValuePair<string, bool>("selfish-egocentric", false),
            new KeyValuePair<string, bool>("emphasize-stress", false),
            new KeyValuePair<string, bool>("extra-additional", false),
            new KeyValuePair<string, bool>("fabricate-manufacture", false),
            new KeyValuePair<string, bool>("famed-famous", false),
            new KeyValuePair<string, bool>("enthusiast-fanatic", false),
            new KeyValuePair<string, bool>("float-drift", false),
            new KeyValuePair<string, bool>("previously-formerly", false),
            new KeyValuePair<string, bool>("lucky-fortunate", false),
            new KeyValuePair<string, bool>("foyer-lobby", false),
            new KeyValuePair<string, bool>("gratuity-tip", false),
            new KeyValuePair<string, bool>("sparkle-glitter", false),
            new KeyValuePair<string, bool>("tough-hard", false),
            new KeyValuePair<string, bool>("home-domestic", false),
            new KeyValuePair<string, bool>("mimic-imitate", false),
            new KeyValuePair<string, bool>("instant-immediate", false),
            new KeyValuePair<string, bool>("childish-infantile", false),
            new KeyValuePair<string, bool>("last-final", false),
            new KeyValuePair<string, bool>("choose-select", false),
            new KeyValuePair<string, bool>("sincere-honest", false),
            new KeyValuePair<string, bool>("tornado-twister", false),
            new KeyValuePair<string, bool>("sensitive-touchy", false),
            new KeyValuePair<string, bool>("transparent-obvious", false),
            new KeyValuePair<string, bool>("pair-twosome", false),
            new KeyValuePair<string, bool>("raw-uncooked", false),
            new KeyValuePair<string, bool>("hoover-vacuum", false),
            new KeyValuePair<string, bool>("useless-vain", false),
			new KeyValuePair<string, bool>("predator-prey", true),
			new KeyValuePair<string, bool>("offence-defence", true),
			new KeyValuePair<string, bool>("fearful-fearless", false),
			new KeyValuePair<string, bool>("ignorant-educated", true),
			new KeyValuePair<string, bool>("slave-master", true),
			new KeyValuePair<string, bool>("buy-purchase", true),
			new KeyValuePair<string, bool>("quickly-speedy", true),
			new KeyValuePair<string, bool>("kill-murder", false),
			new KeyValuePair<string, bool>("shy-outgoing", true),
			new KeyValuePair<string, bool>("on-upon", false),
			new KeyValuePair<string, bool>("begin-commence", false),
			new KeyValuePair<string, bool>("fabricate-build", false),
			new KeyValuePair<string, bool>("initiate-begin", false),
			new KeyValuePair<string, bool>("transmit-send", false),
			new KeyValuePair<string, bool>("use-utilize", false),
			new KeyValuePair<string, bool>("east-west", true),
			new KeyValuePair<string, bool>("stunning-lovely", false),
			new KeyValuePair<string, bool>("pretty-attractive", false),
			new KeyValuePair<string, bool>("funny-humorous", false),
			new KeyValuePair<string, bool>("comical-hilarious", false),
			new KeyValuePair<string, bool>("happy-upbeat", false),
			new KeyValuePair<string, bool>("joyful-happy", false),
			new KeyValuePair<string, bool>("hardworking-determined", false),
			new KeyValuePair<string, bool>("fair-honest", false),
			new KeyValuePair<string, bool>("trustworthy-honest", false),
			new KeyValuePair<string, bool>("smart-brilliant", false),
			new KeyValuePair<string, bool>("bright-brilliant", false),
			new KeyValuePair<string, bool>("introverted-shy", false),
			new KeyValuePair<string, bool>("kind-gracious", false),
			new KeyValuePair<string, bool>("thoughtful-kind", false),
			new KeyValuePair<string, bool>("lazy-idle", false),
			new KeyValuePair<string, bool>("lethargic-lazy", false),
			new KeyValuePair<string, bool>("mean-unfriendly", false),
			new KeyValuePair<string, bool>("unpleasant-unfriendly", false),
			new KeyValuePair<string, bool>("friendly-outgoing", false),
			new KeyValuePair<string, bool>("sociable-friendly", false),
			new KeyValuePair<string, bool>("sociable-extroverted", false),
			new KeyValuePair<string, bool>("warm-friendly", false),
			new KeyValuePair<string, bool>("strong-stable", false),
			new KeyValuePair<string, bool>("strong-solid", false),
			new KeyValuePair<string, bool>("solid-tough", false),
			new KeyValuePair<string, bool>("stable-tough", false),
			new KeyValuePair<string, bool>("depressed-sad", false),
			new KeyValuePair<string, bool>("melancholy-sad", false),
			new KeyValuePair<string, bool>("miserable-melancholy", false),
			new KeyValuePair<string, bool>("mean-difficult", false),
			new KeyValuePair<string, bool>("optimistic-positive", false),
			new KeyValuePair<string, bool>("cheerful-positive", false),
			new KeyValuePair<string, bool>("controlling-bossy", false),
			new KeyValuePair<string, bool>("baffle-confuse", false),
			new KeyValuePair<string, bool>("obstinate-stubborn", false),
			new KeyValuePair<string, bool>("violent-turbulent", false),
			new KeyValuePair<string, bool>("disordered-turbulent", false),
			new KeyValuePair<string, bool>("valid-legitimate", false),
			new KeyValuePair<string, bool>("authorized-valid", false),
			new KeyValuePair<string, bool>("old-aged", false),
			new KeyValuePair<string, bool>("ancient-aged", false),
			new KeyValuePair<string, bool>("old-past", false),
			new KeyValuePair<string, bool>("true-correct", false),
			new KeyValuePair<string, bool>("valid-true", false),
			new KeyValuePair<string, bool>("accurate-true", false),
			new KeyValuePair<string, bool>("important-required", false),
			new KeyValuePair<string, bool>("vital-important", false),
			new KeyValuePair<string, bool>("critical-important", false),
			new KeyValuePair<string, bool>("madden-anger", false),
			new KeyValuePair<string, bool>("unbelievable-amazing", false),
			new KeyValuePair<string, bool>("fabulous-wonderful", false),
			new KeyValuePair<string, bool>("fantastic-wonderful", false),
			new KeyValuePair<string, bool>("amazing-astonishing", false),
			new KeyValuePair<string, bool>("enraged-angry", false),
			new KeyValuePair<string, bool>("respond-answer", false),
			new KeyValuePair<string, bool>("question-ask", false),
			new KeyValuePair<string, bool>("ask-expect", false),
			new KeyValuePair<string, bool>("evil-bad", false),
			new KeyValuePair<string, bool>("request-ask", false),
			new KeyValuePair<string, bool>("dreadful-awful", false),
			new KeyValuePair<string, bool>("terrible-bad", false),
			new KeyValuePair<string, bool>("exterior-interior", true),
			new KeyValuePair<string, bool>("feeble-powerful", true),
			new KeyValuePair<string, bool>("strong-feeble", true),
			new KeyValuePair<string, bool>("frank-secretive", true),
			new KeyValuePair<string, bool>("gentle-rough", true),
			new KeyValuePair<string, bool>("pygmy-giant", true),
			new KeyValuePair<string, bool>("coward-hero", true),
			new KeyValuePair<string, bool>("hinder-help", true),
			new KeyValuePair<string, bool>("dishonest-honest", true),
			new KeyValuePair<string, bool>("humble-proud", true),
			new KeyValuePair<string, bool>("hill-valley", true),
			new KeyValuePair<string, bool>("exclude-include", true),
			new KeyValuePair<string, bool>("room-yard", true),
			new KeyValuePair<string, bool>("inhale-exhale", true),
			new KeyValuePair<string, bool>("dull-interesting", true),
			new KeyValuePair<string, bool>("separate-join", true),
			new KeyValuePair<string, bool>("accidental-intentional", true),
			new KeyValuePair<string, bool>("injustice-justice", true),
			new KeyValuePair<string, bool>("energetic-lazy", true),
			new KeyValuePair<string, bool>("lawyer-client", true),
			new KeyValuePair<string, bool>("more-less", true),
			new KeyValuePair<string, bool>("lofty-lowly", true),
			new KeyValuePair<string, bool>("follower-leader", true),
			new KeyValuePair<string, bool>("sane-mad", true),
			new KeyValuePair<string, bool>("insane-sane", true),
			new KeyValuePair<string, bool>("me-you", true),
			new KeyValuePair<string, bool>("he-she", true),
			new KeyValuePair<string, bool>("we-they", true),
			new KeyValuePair<string, bool>("mine-yours", true),
			new KeyValuePair<string, bool>("understand-misunderstand", true),
			new KeyValuePair<string, bool>("obedient-disobedient", true),
			new KeyValuePair<string, bool>("prose-poetry", true),
			new KeyValuePair<string, bool>("please-displease", true),
			new KeyValuePair<string, bool>("poverty-wealth", true),
			new KeyValuePair<string, bool>("pure-impure", true),
			new KeyValuePair<string, bool>("rapid-slow", true),
			new KeyValuePair<string, bool>("smooth-rough", true),
			new KeyValuePair<string, bool>("security-insecurity", true),
			new KeyValuePair<string, bool>("scatter-collect", true),
			new KeyValuePair<string, bool>("sense-nonsense", true),
			new KeyValuePair<string, bool>("shopkeeper-customer", true),
			new KeyValuePair<string, bool>("plural-singular", true),
			new KeyValuePair<string, bool>("speaker-listener", true),
			new KeyValuePair<string, bool>("sorrow-joy", true),
			new KeyValuePair<string, bool>("stand-lie", true),
			new KeyValuePair<string, bool>("tame-wild", true),
			new KeyValuePair<string, bool>("transparent-opaque", true),
			new KeyValuePair<string, bool>("valuable-valueless", true),
			new KeyValuePair<string, bool>("defeat-victory", true),
			new KeyValuePair<string, bool>("virtue-vice", true),
			new KeyValuePair<string, bool>("folly-wisdom", true),
			new KeyValuePair<string, bool>("wax-wane", true),
			new KeyValuePair<string, bool>("terrible-good", true),
			new KeyValuePair<string, bool>("ask-reply", true),
			new KeyValuePair<string, bool>("calm-angry", true),
			new KeyValuePair<string, bool>("incredible-ugly", true),
			new KeyValuePair<string, bool>("sparkling-beautiful", false),
			new KeyValuePair<string, bool>("aesthetic-beautiful", false),
			new KeyValuePair<string, bool>("beautiful-glowing", false),
			new KeyValuePair<string, bool>("pretty-lovely", false),
			new KeyValuePair<string, bool>("elegant-glorious", false),
			new KeyValuePair<string, bool>("open-begin", false),
			new KeyValuePair<string, bool>("launch-open", false),
			new KeyValuePair<string, bool>("begin-originate", false),
			new KeyValuePair<string, bool>("big-sizeable", false),
			new KeyValuePair<string, bool>("gigantic-huge", false),
			new KeyValuePair<string, bool>("large-grand", false),
			new KeyValuePair<string, bool>("big-grand", false),
			new KeyValuePair<string, bool>("big-astronomical", false),
			new KeyValuePair<string, bool>("smash-break", false),
			new KeyValuePair<string, bool>("break-crash", false),
			new KeyValuePair<string, bool>("shiny-bright", false),
			new KeyValuePair<string, bool>("intelligent-bright", false),
			new KeyValuePair<string, bool>("bright-knowing", false),
			new KeyValuePair<string, bool>("calm-quiet", false),
			new KeyValuePair<string, bool>("peaceful-calm", false),
			new KeyValuePair<string, bool>("come-arrive", false),
			new KeyValuePair<string, bool>("reach-come", false),
			new KeyValuePair<string, bool>("cool-cold", false),
			new KeyValuePair<string, bool>("cool-icy", false),
			new KeyValuePair<string, bool>("icy-frigid", false),
			new KeyValuePair<string, bool>("crooked-curved", false),
			new KeyValuePair<string, bool>("shout-cry", false),
			new KeyValuePair<string, bool>("cut-chop", false),
			new KeyValuePair<string, bool>("chop-crop", false),
			new KeyValuePair<string, bool>("reduce-cut", false),
			new KeyValuePair<string, bool>("shadowy-dark", false),
			new KeyValuePair<string, bool>("shaded-dark", false),
			new KeyValuePair<string, bool>("dark-sad", false),
			new KeyValuePair<string, bool>("sad-black", false),
			new KeyValuePair<string, bool>("settle-decide", false),
			new KeyValuePair<string, bool>("delicious-delightful", false),
			new KeyValuePair<string, bool>("characterize-describe", false),
			new KeyValuePair<string, bool>("ruin-destroy", false),
			new KeyValuePair<string, bool>("destroy-kill", false),
			new KeyValuePair<string, bool>("contrast-difference", false),
			new KeyValuePair<string, bool>("tiring-dull", false),
			new KeyValuePair<string, bool>("dull-stupid", false),
			new KeyValuePair<string, bool>("eager-enthusiastic", false),
			new KeyValuePair<string, bool>("enjoy-like", false),
			new KeyValuePair<string, bool>("explain-elaborate", false),
			new KeyValuePair<string, bool>("drop-fall", false),
			new KeyValuePair<string, bool>("false-untrue", false),
			new KeyValuePair<string, bool>("fat-bulky", false),
			new KeyValuePair<string, bool>("soar-fly", false),
			new KeyValuePair<string, bool>("droll-funny", false),
			new KeyValuePair<string, bool>("laughable-comical", false),
			new KeyValuePair<string, bool>("get-gain", false),
			new KeyValuePair<string, bool>("accept-get", false),
			new KeyValuePair<string, bool>("get-earn", false),
			new KeyValuePair<string, bool>("go-travel", false),
			new KeyValuePair<string, bool>("good-suited", false),
			new KeyValuePair<string, bool>("good-great", false),
			new KeyValuePair<string, bool>("worthy-fine", false),
			new KeyValuePair<string, bool>("grand-superb", false),
			new KeyValuePair<string, bool>("great-worthy", false),
			new KeyValuePair<string, bool>("much-great", false),
			new KeyValuePair<string, bool>("happy-glad", false),
			new KeyValuePair<string, bool>("cheerful-happy", false),
			new KeyValuePair<string, bool>("happy-joyful", false),
			new KeyValuePair<string, bool>("hate-dislike", false),
			new KeyValuePair<string, bool>("have-hold", false),
			new KeyValuePair<string, bool>("own-have", false),
			new KeyValuePair<string, bool>("help-assist", false),
			new KeyValuePair<string, bool>("support-help", false),
			new KeyValuePair<string, bool>("hide-cover", false),
			new KeyValuePair<string, bool>("hide-mask", false),
			new KeyValuePair<string, bool>("rush-hurry", false),
			new KeyValuePair<string, bool>("damage-hurt", false),
			new KeyValuePair<string, bool>("injure-hurt", false),
			new KeyValuePair<string, bool>("hurt-pain", false),
			new KeyValuePair<string, bool>("idea-concept", false),
			new KeyValuePair<string, bool>("plan-idea", false),
			new KeyValuePair<string, bool>("end-stop", false),
			new KeyValuePair<string, bool>("finish-stop", false),
			new KeyValuePair<string, bool>("stupid-dull", false),
			new KeyValuePair<string, bool>("close-end", false),
			new KeyValuePair<string, bool>("enjoy-appreciate", false),
			new KeyValuePair<string, bool>("fake-false", false),
			new KeyValuePair<string, bool>("famous-renowned", false),
			new KeyValuePair<string, bool>("celebrated-famous", false),
			new KeyValuePair<string, bool>("fast-mercurial", false),
			new KeyValuePair<string, bool>("fat-chubby", false),
			new KeyValuePair<string, bool>("chunky-fat", false),
			new KeyValuePair<string, bool>("appealing-interesting", false),
			new KeyValuePair<string, bool>("little-tiny", false),
			new KeyValuePair<string, bool>("limited-little", false),
			new KeyValuePair<string, bool>("look-watch", false),
			new KeyValuePair<string, bool>("notice-look", false),
			new KeyValuePair<string, bool>("admire-love", false),
			new KeyValuePair<string, bool>("fancy-love", false),
			new KeyValuePair<string, bool>("adore-love", false),
			new KeyValuePair<string, bool>("create-make", false),
			new KeyValuePair<string, bool>("invent-make", false),
			new KeyValuePair<string, bool>("make-build", false),
			new KeyValuePair<string, bool>("mark-label", false),
			new KeyValuePair<string, bool>("tag-mark", false),
			new KeyValuePair<string, bool>("tag-label", false),
			new KeyValuePair<string, bool>("mark-effect", false),
			new KeyValuePair<string, bool>("mark-stamp", false),
			new KeyValuePair<string, bool>("brand-mark", false),
			new KeyValuePair<string, bool>("mark-note", false),
			new KeyValuePair<string, bool>("mischievous-playful", false),
			new KeyValuePair<string, bool>("move-go", false),
			new KeyValuePair<string, bool>("drag-move", false),
			new KeyValuePair<string, bool>("moody-temperamental", false),
			new KeyValuePair<string, bool>("changeable-moody", false),
			new KeyValuePair<string, bool>("touchy-moody", false),
			new KeyValuePair<string, bool>("neat-clean", false),
			new KeyValuePair<string, bool>("orderly-neat", false),
			new KeyValuePair<string, bool>("neat-organized", false),
			new KeyValuePair<string, bool>("clean-tidy", false),
			new KeyValuePair<string, bool>("new-fresh", false),
			new KeyValuePair<string, bool>("new-original", false),
			new KeyValuePair<string, bool>("aged-old", false),
			new KeyValuePair<string, bool>("veteran-old", false),
			new KeyValuePair<string, bool>("part-piece", false),
			new KeyValuePair<string, bool>("part-fragment", false),
			new KeyValuePair<string, bool>("section-part", false),
			new KeyValuePair<string, bool>("place-area", false),
			new KeyValuePair<string, bool>("spot-place", false),
			new KeyValuePair<string, bool>("location-area", false),
			new KeyValuePair<string, bool>("place-position", false),
			new KeyValuePair<string, bool>("site-place", false),
			new KeyValuePair<string, bool>("plan-design", false),
			new KeyValuePair<string, bool>("map-plan", false),
			new KeyValuePair<string, bool>("plan-intention", false),
			new KeyValuePair<string, bool>("plan-method", false),
			new KeyValuePair<string, bool>("put-place", false),
			new KeyValuePair<string, bool>("set-put", false),
			new KeyValuePair<string, bool>("put-attach", false),
			new KeyValuePair<string, bool>("quiet-silent", false),
			new KeyValuePair<string, bool>("silent-mute", false),
			new KeyValuePair<string, bool>("right-true", false),
			new KeyValuePair<string, bool>("honest-right", false),
			new KeyValuePair<string, bool>("right-legal", false),
			new KeyValuePair<string, bool>("right-suitable", false),
			new KeyValuePair<string, bool>("right-moral", false),
			new KeyValuePair<string, bool>("moral-proper", false),
			new KeyValuePair<string, bool>("run-sprint", false),
			new KeyValuePair<string, bool>("say-advice", false),
			new KeyValuePair<string, bool>("scared-afraid", false),
			new KeyValuePair<string, bool>("frightened-scared", false),
			new KeyValuePair<string, bool>("fearful-scared", false),
			new KeyValuePair<string, bool>("panicked-afraid", false),
			new KeyValuePair<string, bool>("show-display", false),
			new KeyValuePair<string, bool>("present-show", false),
			new KeyValuePair<string, bool>("explain-show", false),
			new KeyValuePair<string, bool>("show-demonstrate", false),
			new KeyValuePair<string, bool>("slow-unhurried", false),
			new KeyValuePair<string, bool>("slow-late", false),
			new KeyValuePair<string, bool>("stop-stay", false),
			new KeyValuePair<string, bool>("quit-stop", false),
			new KeyValuePair<string, bool>("story-tale", false),
			new KeyValuePair<string, bool>("myth-legend", false),
			new KeyValuePair<string, bool>("strange-odd", false),
			new KeyValuePair<string, bool>("unusual-strange", false),
			new KeyValuePair<string, bool>("strange-weird", false),
			new KeyValuePair<string, bool>("irregular-strange", false),
			new KeyValuePair<string, bool>("take-hold", false),
			new KeyValuePair<string, bool>("catch-take", false),
			new KeyValuePair<string, bool>("pick-choose", false),
			new KeyValuePair<string, bool>("tell-declare", false),
			new KeyValuePair<string, bool>("think-believe", false),
			new KeyValuePair<string, bool>("trouble-worry", false),
			new KeyValuePair<string, bool>("trouble-effort", false),
			new KeyValuePair<string, bool>("ugly-shocking", false),
			new KeyValuePair<string, bool>("terrifying-ugly", false),
			new KeyValuePair<string, bool>("horrible-ugly", false),
			new KeyValuePair<string, bool>("unhappy-miserable", false),
			new KeyValuePair<string, bool>("unhappy-sorrowful", false),
			new KeyValuePair<string, bool>("use-spend", false),
			new KeyValuePair<string, bool>("wrong-mistaken", false),
			new KeyValuePair<string, bool>("unsuitable-wrong", false),
			new KeyValuePair<string, bool>("absent-present", true),
			new KeyValuePair<string, bool>("scarce-abundant", true),
			new KeyValuePair<string, bool>("accurate-inaccurate", true),
			new KeyValuePair<string, bool>("advantage-disadvantage", true),
			new KeyValuePair<string, bool>("for-against", true),
			new KeyValuePair<string, bool>("bent-straight", true),
			new KeyValuePair<string, bool>("calm-windy", true),
			new KeyValuePair<string, bool>("troubled-calm", true),
			new KeyValuePair<string, bool>("can-can't", true),
			new KeyValuePair<string, bool>("do-don't", true),
			new KeyValuePair<string, bool>("did-didn't", true),
			new KeyValuePair<string, bool>("is-isn't", true),
			new KeyValuePair<string, bool>("are-aren't", true),
			new KeyValuePair<string, bool>("were-weren't", true),
			new KeyValuePair<string, bool>("captive-free", true),
			new KeyValuePair<string, bool>("careful-careless", true),
			new KeyValuePair<string, bool>("cheerful-sad", true),
			new KeyValuePair<string, bool>("clear-cloudy", true),
			new KeyValuePair<string, bool>("opaque-clear", true),
			new KeyValuePair<string, bool>("decrease-increase", true),
			new KeyValuePair<string, bool>("easy-difficult", true),
			new KeyValuePair<string, bool>("fade-brighten", true),
			new KeyValuePair<string, bool>("feeble-strong", true),
			new KeyValuePair<string, bool>("generous-stingy", true),
			new KeyValuePair<string, bool>("harmful-harmless", true),
			new KeyValuePair<string, bool>("ill-well", true),
			new KeyValuePair<string, bool>("include-exclude", true),
			new KeyValuePair<string, bool>("join-separate", true),
			new KeyValuePair<string, bool>("knowledge-ignorance", true),
			new KeyValuePair<string, bool>("landlord-tenant", true),
			new KeyValuePair<string, bool>("last-first", true),
			new KeyValuePair<string, bool>("lawful-illegal", true),
			new KeyValuePair<string, bool>("lazy-industrious", true),
			new KeyValuePair<string, bool>("mad-sane", true),
			new KeyValuePair<string, bool>("happy-mad", true),
			new KeyValuePair<string, bool>("mature-immature", true),
			new KeyValuePair<string, bool>("neat-messy", true),
			new KeyValuePair<string, bool>("untidy-messy", false),
			new KeyValuePair<string, bool>("obedient-disobedient", true),
			new KeyValuePair<string, bool>("offer-refuse", true),
			new KeyValuePair<string, bool>("permanent-temporary", true),
			new KeyValuePair<string, bool>("peace-war", true),
			new KeyValuePair<string, bool>("qualified-unqualified", true),
			new KeyValuePair<string, bool>("raise-lower", true),
			new KeyValuePair<string, bool>("tame-wild", true),
			new KeyValuePair<string, bool>("serious-trivial", true),
			new KeyValuePair<string, bool>("separate-together", true),
			new KeyValuePair<string, bool>("shrink-grow", true),
			new KeyValuePair<string, bool>("vast-tiny", true),
			new KeyValuePair<string, bool>("yes-no", true),
			new KeyValuePair<string, bool>("true-false", true),
			new KeyValuePair<string, bool>("upside-down", true),
			new KeyValuePair<string, bool>("upstairs-downstairs", true),
			new KeyValuePair<string, bool>("useful-useless", true),
			new KeyValuePair<string, bool>("sour-sweet", true),
			new KeyValuePair<string, bool>("loud-quiet", true),
			new KeyValuePair<string, bool>("internal-external", true),
			new KeyValuePair<string, bool>("intentional-accidental", true),
			new KeyValuePair<string, bool>("grant-refuse", true),
			new KeyValuePair<string, bool>("bold-timid", true),
			new KeyValuePair<string, bool>("attractive-repulsive", true),
			new KeyValuePair<string, bool>("attic-cellar", true),
        };

        #endregion

        private Vector2 leftButtonPos,
                        rightButtonPos;

        private GameButton oppositeBtn,
                           similarBtn;

        private bool isOpposite;
        private static List<string> usedWords;

        #endregion

        #region methods

        private void SwapButtons()
        {
            var similarOnTheLeftSide = Random.Range(0, 2) == 1;

            if (similarOnTheLeftSide)
            {
                similarBtn.Tr.localPosition = leftButtonPos;
                oppositeBtn.Tr.localPosition = rightButtonPos;
            }
            else
            {
                similarBtn.Tr.localPosition = rightButtonPos;
                oppositeBtn.Tr.localPosition = leftButtonPos;
            }
        }

        protected override void Init()
        {
            base.Init();

            oppositeBtn = GameObjectManager.GetGoInChildren(Go, "Opposite").GetComponent<GameButton>();
            similarBtn = GameObjectManager.GetGoInChildren(Go, "Similar").GetComponent<GameButton>();

            leftButtonPos = similarBtn.Tr.localPosition;
            rightButtonPos = oppositeBtn.Tr.localPosition;

            if(usedWords == null || usedWords.Count == Words.Length)
                usedWords = new List<string>();
        }

        protected virtual bool IsCorrect()
        {
            if (ClickedBtn.name == "Opposite")
            {
                return isOpposite;
            }
            return !isOpposite;
        }

        protected override void OnGameButtonClick(GameButton clickedButton)
        {
            base.OnGameButtonClick(clickedButton);

            if (IsCorrect())
            {
                ValidateCorrect();
            }
            else
            {
                ValidateIncorrect();
            }

            if(!GameOver)
                GenerateNew();
        }

        protected override void GenerateNew()
        {
            SwapButtons();

            if (usedWords.Count == Words.Length)
            {
                usedWords.Clear();
            }

            int indexer;
            string nextWords;

            do
            {
                indexer = Random.Range(0, Words.Length);
                nextWords = Words[indexer].Key;
            } while (usedWords.Contains(nextWords));

            usedWords.Add(nextWords);

            GameObjectManager.GetGoInChildren(Go, "Question").GetComponent<Text>().text = nextWords;
            isOpposite = Words[indexer].Value;
        }
        #endregion
    }
}